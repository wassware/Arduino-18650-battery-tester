The charge control uses a module based on the TP4056 chip. You can find chip datasheet on Google.
The module I used can be had from Ebay as something like 'TP4056 Lithium Charger Module with Battery Protection Micro USB 5V 1A' for around 80p or so each for 5 or more. The module circuit diagram and a picture are included here.
The 4056 chip handles the charge control and will indicate when done. Peak charge current is 1A, starting to drop when the voltage approaches 4.2V. Charge complete is when current drops to 0.1A.
The board also contains the DW01A protection chip and a series pair of MOSFETS on the negative line to limit minimum and maximum cell voltage and current. The volt drop over the MOSFETS are used to measure the current. Being on the negative line this does influence the battery voltage read  by the Arduino. I measured 60mv at around 1A discharge so this can be compensated for.
To switch charge on and off needs a hack as the Enable pin is wired high. So pin 8 connection to the board needs cutting. This is the one next to the R2 characters on the board picture. Very fine snips may work. I found that gently sawing with a fine craft knife blade worked for me. Then a fine wire can be soldered to the chip leg to provide enable (active low) control. After testing I blobbed Araldite on the joints.
Either the charge complete (red led pin 7) or not charging chip (green led - pin 6) outputs can be used to read charging state. These are pulldown active. To minimise IO I found that joining pin 6 and pin 8 together and attaching a control wire the charging state can be made into a flip flop. Briefly pulling down would flip into charge state and it will stay low, briefly pulling up into no charge state and it will stay high. On natural charge complete (or no battery connected) it will flip itself to low. In the Arduino code the IO pin is normally input. To flip state the pin is set to output, high or low set, then flipped back to input and read to make sure the state has held. So we get charge control and charge state from one wire.
Discharge is using the trusty IRF520N MOSFET that can be driven directly from an Arduino output. The load resistors are two 8R 5W resistors in parallel to give a starting discharge current of around 1A.
The Arduino reads the battery voltage direct. To give stability the VRef is provided at 4.2v with a TL431A shunt voltage reference chip. This needs three resistors and a capacitor to configure.